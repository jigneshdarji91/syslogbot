- name: Create security group
  ec2_group:
    name: "{{ project_name }}_security_group"
    description: "{{ project_name }} security group"
    region: "{{ aws_region }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
      - proto: all
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: basic_firewall

- name: Create an EC2 instance
  ec2:
      key_name: "{{ project_name }}"
      region: "{{ aws_region }}"
      group_id: "{{ basic_firewall.group_id }}"
      instance_type: "{{ instance_type }}"
      image: "{{ ami }}"
      wait: yes
      instance_tags:
          env: "{{ env }}"
      count_tag: env
      exact_count: 5
      user_data: |
        sudo apt-get update
        sudo apt-get install python2.7
  register: ec2

- name: save IP to inventory file
  copy: content="zookeeper_ip:{{ ec2.tagged_instances[0].public_ip }}" dest=./{{ env }}
  with_items: ec2.tagged_instances

# - name: Add IP to ec2_hosts group
#   add_host: hostname="{{ ec2.tagged_instances[0].public_ip }}" groups="{{ group[0] }}"
#   with_items: ec2.tagged_instances

- name: Write to inventory file
  lineinfile: 
    dest: inventory
    line: "{{ group[0] }} ansible_ssh_host={{ ec2.tagged_instances[0].public_ip }} ansible_ssh_user={{ app_code_user }} ansible_ssh_private_key_file={{ project_name }}\n{{ group[1] }} ansible_ssh_host={{ ec2.tagged_instances[1].public_ip }} ansible_ssh_user={{ app_code_user }} ansible_ssh_private_key_file={{ project_name }}\n{{ group[2] }} ansible_ssh_host={{ ec2.tagged_instances[2].public_ip }} ansible_ssh_user={{ app_code_user }} ansible_ssh_private_key_file={{ project_name }}\n{{ group[3] }} ansible_ssh_host={{ ec2.tagged_instances[3].public_ip }} ansible_ssh_user={{ app_code_user }} ansible_ssh_private_key_file={{ project_name }}\n{{ group[4] }} ansible_ssh_host={{ ec2.tagged_instances[4].public_ip }} ansible_ssh_user={{ app_code_user }} ansible_ssh_private_key_file={{ project_name }}"
  with_items: ec2.tagged_instances

- name: Add variables 
  lineinfile: 
    dest: group_vars/all 
    line: "{{ group[0] }}_ip: {{ ec2.tagged_instances[0].public_ip }} \n{{ group[1] }}_ip: {{ ec2.tagged_instances[1].public_ip }} \n{{ group[2] }}_ip: {{ ec2.tagged_instances[2].public_ip }} \n{{ group[3] }}_ip: {{ ec2.tagged_instances[3].public_ip }} \n{{ group[4] }}_ip: {{ ec2.tagged_instances[4].public_ip }}"
  with_items: ec2.tagged_instances

- name: Wait for SSH to come up
  wait_for: host={{ item.public_dns_name }} port=22 delay=60 timeout=320 state=started
  with_items: '{{ec2.instances}}'
